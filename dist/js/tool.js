!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(1),e.exports=n(6)},function(e,t,n){Nova.booting(function(e,t,o){e.component("nova-external-login",n(2))})},function(e,t,n){var o=n(3)(n(4),n(5),!1,null,null,null);e.exports=o.exports},function(e,t){e.exports=function(e,t,n,o,r,s){var i,a=e=e||{},u=typeof e.default;"object"!==u&&"function"!==u||(i=e,a=e.default);var c,l="function"==typeof a?a.options:a;if(t&&(l.render=t.render,l.staticRenderFns=t.staticRenderFns,l._compiled=!0),n&&(l.functional=!0),r&&(l._scopeId=r),s?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},l._ssrRegister=c):o&&(c=o),c){var f=l.functional,p=f?l.render:l.beforeCreate;f?(l._injectStyles=c,l.render=function(e,t){return c.call(t),p(e,t)}):l.beforeCreate=p?[].concat(p,c):[c]}return{esModule:i,exports:a,options:l}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:["resourceName","resourceId","panel"],mounted:function(){},computed:{resourceID:function(){return this.panel.fields[0].resourceID||this.resourceId},postUrl:function(){return this.panel.fields[0].postUrl||"http://localhost:3000"},iframeUrl:function(){return this.postUrl+(this.panel.fields[0].iframePath||"/external-login")},redirectUrl:function(){return this.postUrl+(this.panel.fields[0].redirectPath||"/login")}},methods:{postCrossDomainMessage:function(e){this.$refs["login-iframe"].contentWindow.postMessage(e,this.postUrl)},saveToken:function(e){var t=this;this.$toasted.show(this.__("Token generated. Saving token. Please do not refresh the page"),{type:"success"}),this.postCrossDomainMessage(e.data),setTimeout(function(){t.$toasted.show(t.__("Redirecting..."),{type:"success"}),window.open(t.redirectUrl,"_blank")},3e3)},loginAs:function(){var e=this;this.$toasted.show("Request new token.  Please do not refresh the page",{type:"success"}),Nova.request().post("/nova-vendor/nova-external-login/"+this.resourceName+"/"+this.resourceID+"/create-token",{unique_key:this.panel.uniqueKey}).then(function(t){e.saveToken(t.data)})}}}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"block"},[n("button",{staticClass:"block w-full btn btn-default text-white  bg-primary",on:{click:function(t){return t.preventDefault(),e.loginAs(t)}}},[e._v("\n        "+e._s(e.panel.buttonTitle||"Login")+"\n    ")]),e._v(" "),n("iframe",{ref:"login-iframe",staticStyle:{display:"none"},attrs:{src:e.iframeUrl}})])},staticRenderFns:[]}},function(e,t){}]);